#bind r source-file ~/.tmux.conf \; display-message "Reload Config!"        
#set-window-option -g mode-keys vi

#bind-key C-b
#set-option -g prefix C-t
#bind-key C-t send-prefix

#history-limit
#set-option -g history-limit 10000

#tmux powerline $pip install powerline-status
#run-shell "powerline-daemon -q"
#source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
#set-option -g default-terminal screen-256color
#set -g terminal-overrides 'xterm:colors=256'
 
# ===== logging =====
#
# C-b C-p Start logging.
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%Y_%m%d_%H%M%S_%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
#C-b C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# C-b v Open new window. Logging always. (-n is set window name.)
bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%Y_%m%d_%H%M%S_%N\")] \$(LINE)\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

# ===== Save and restore tmux session ====
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# resurrect
set -g @resurrect-strategy-vim 'session'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

#====================================
# Auto start tmux and restore
#====================================

# auto start terminal
set -g @ccontinuum-boot 'on'
set -g @continuum-boot-options   'iterm'

# auto restore tmux
set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
